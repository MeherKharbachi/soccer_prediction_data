# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/dataStrcuture/02_team_stats.ipynb.

# %% auto 0
__all__ = ['Action', 'TeamStats']

# %% ../../nbs/dataStrcuture/02_team_stats.ipynb 3
import pandas as pd
import mongoengine
import datetime
import logging
from typing import List
from mongoengine.fields import ListField
from ..config.localconfig import CONFIG

# %% ../../nbs/dataStrcuture/02_team_stats.ipynb 6
class Action(mongoengine.EmbeddedDocument):
    "Stores main information about the reported stats of a given team in a given game."
    # Action Ids.
    action_id = mongoengine.IntField(db_field="actionId", required=True)
    # Action name.
    action_name = mongoengine.StringField(db_field="actionName", required=True)
    # Value.
    value = mongoengine.IntField(db_field="value", required=True)
    # Time Periods.
    time_periods = ListField(db_field="timePeriods", required=False)
    # Zones.
    zones = ListField(db_field="zones", required=False)

# %% ../../nbs/dataStrcuture/02_team_stats.ipynb 8
class TeamStats(mongoengine.Document):
    "Store the team stats for a given game identified by its id"

    # Game-id.
    game_id = mongoengine.IntField(db_field="gameId", required=True)

    # Team.
    team_id = mongoengine.IntField(db_field="teamId", required=True)
    team_name = mongoengine.StringField(db_field="teamName", required=True)

    # Stats.
    stats = mongoengine.EmbeddedDocumentListField(Action)

    meta = {
        "db_alias": "inStat",
        "collection": "teamStats",
    }

    @classmethod
    def get_all_teams_stats(
        cls,
        limit: int = None,  # Number of rows.
    ):  # List of TeamStats output.
        "Extract all documents."
        return cls.objects().limit(limit)

    @classmethod
    def get_game_team_stats(
        cls,
        game_id: int,  # Instat game identifier.
        team_id: int,  # Instat team identifier.
    ):  # Fixture output.
        "Extract a single game stats by its gameId and teamId."
        return cls.objects(game_id=game_id, team_id=team_id).first()
